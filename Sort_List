/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *sortList(ListNode *head) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(head==NULL)
            return NULL;
        return   mergeSort(head);
    }
    ListNode * mergeSort(ListNode * head)
    {
        if(head==NULL||head->next==NULL)
            return head;
        ListNode *Head=new ListNode(0);Head->next=head;
        ListNode * slow=Head,* fast=Head;
        while(fast->next&&fast->next->next)
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        fast=slow->next;slow->next=NULL;
        slow=mergeSort(head);
        fast=mergeSort(fast);
        Head->next=NULL;head=Head;
        while(slow&&fast)
        {
            if(slow->val<fast->val)
            {
                head->next=slow;
                head=slow;
                slow=slow->next;
            }
            else
            {
                head->next=fast;
                head=fast;
                fast=fast->next;
            }
        }
        if(slow)
            head->next=slow;
        else
            head->next=fast;
        head=Head->next;delete Head;
        return head;
    }
    
};
